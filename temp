// Seguimiento del mouse
// const mouse = { x: 0, y: 0 };

// // Función para actualizar la posición del mouse/touch
// function updateMousePosition(e) {
//     const rect = canvas.getBoundingClientRect();
//     if (e.type.startsWith("touch")) {
//         // Si es un evento de toque, usa la primera posición del toque
//         mouse.x = e.touches[0].clientX - rect.left;
//         mouse.y = e.touches[0].clientY - rect.top;
//     } else {
//         // Si es un evento de mouse, usa las coordenadas del mouse
//         mouse.x = e.clientX - rect.left;
//         mouse.y = e.clientY - rect.top;
//     }
// }

// // Evento de mouse para escritorio
// canvas.addEventListener('mousemove', updateMousePosition);

// // Evento de touch para móviles
// canvas.addEventListener('touchmove', (e) => {
//     e.preventDefault(); // Para evitar el comportamiento predeterminado de desplazamiento o zoom
//     updateMousePosition(e);
// });

// // Variables para el joystick
// const joystick = { x: 0, y: 0, active: false };
// const joystickBase = { x: 0, y: 0 };
// const joystickRadius = 50;
// const handleRadius = 20;

// // Función para obtener la posición del evento (mouse o touch)
// function getEventPosition(e) {
//     const rect = canvas.getBoundingClientRect();
//     if (e.type.startsWith("touch")) {
//         return {
//             x: e.touches[0].clientX - rect.left,
//             y: e.touches[0].clientY - rect.top
//         };
//     } else {
//         return {
//             x: e.clientX - rect.left,
//             y: e.clientY - rect.top
//         };
//     }
// }

// // Función para iniciar el joystick
// function startJoystick(e) {
//     const pos = getEventPosition(e);
//     joystickBase.x = pos.x;
//     joystickBase.y = pos.y;
//     joystick.x = pos.x;
//     joystick.y = pos.y;
//     joystick.active = true;
// }

// // Función para mover el joystick
// function moveJoystick(e) {
//     if (joystick.active) {
//         const pos = getEventPosition(e);
//         const dx = pos.x - joystickBase.x;
//         const dy = pos.y - joystickBase.y;
//         const distance = Math.sqrt(dx * dx + dy * dy);

//         if (distance < joystickRadius) {
//             joystick.x = pos.x;
//             joystick.y = pos.y;
//         } else {
//             const angle = Math.atan2(dy, dx);
//             joystick.x = joystickBase.x + Math.cos(angle) * joystickRadius;
//             joystick.y = joystickBase.y + Math.sin(angle) * joystickRadius;
//         }
//     }
// }

// // Función para finalizar el joystick
// function endJoystick() {
//     joystick.active = false;
// }

// // Eventos para móviles
// canvas.addEventListener('touchstart', (e) => {
//     e.preventDefault();
//     startJoystick(e);
// });
// canvas.addEventListener('touchmove', (e) => {
//     e.preventDefault();
//     moveJoystick(e);
// });
// canvas.addEventListener('touchend', (e) => {
//     e.preventDefault();
//     endJoystick();
// });



// Control de teclas
// const keys = {};
// document.addEventListener('keydown', (e) => keys[e.key] = true);
// document.addEventListener('keyup', (e) => keys[e.key] = false);


